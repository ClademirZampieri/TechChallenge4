name: Build, test, and deploy ApiFrontTechChallenge and FrontEnd to Local Kubernetes

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.x'
          include-prerelease: true

      - name: Build API with dotnet
        run: dotnet build --configuration Release

  unit-test:
    runs-on: windows-latest
    needs: build
    continue-on-error: true

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.x'
          include-prerelease: true

      - name: Test API with dotnet
        run: dotnet test ./TechChallenge.Domain.UnitTest/TechChallenge.Domain.UnitTest.csproj --configuration Release

  integration-test:
    runs-on: ubuntu-latest
    needs: build
    continue-on-error: true

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.x'
          include-prerelease: true

      - name: Test API with dotnet
        run: dotnet test ./TechChallenge.Domain.IntegrationTest/TechChallenge.Domain.IntegrationTest.csproj --configuration Release

  build-and-push-images:
    runs-on: ubuntu-latest
    needs: [unit-test, integration-test]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push API Docker image
        run: |
          docker build -t localhost:5000/api-front-tech-challenge:latest -f ./TechChallenge.API.dockerfile .
          docker push localhost:5000/api-front-tech-challenge:latest

      - name: Build and push FrontEnd Docker image
        run: |
          docker build -t localhost:5000/front-tech-challenge:latest -f ./TechChallenge.Web.dockerfile .
          docker push localhost:5000/front-tech-challenge:latest

  deploy-to-local-kubernetes:
    runs-on: ubuntu-latest
    needs: build-and-push-images

    steps:
      - uses: actions/checkout@v4

      - name: Set up kubectl
        env:
          KUBECONFIG_DATA: ${{ secrets.KUBECONFIG_DATA }}
        run: |
          echo "${KUBECONFIG_DATA}" | base64 -d > kubeconfig
          export KUBECONFIG=kubeconfig
          kubectl cluster-info

      - name: Deploy API to Kubernetes
        run: |
          kubectl set image deployment/api-deployment api-container=localhost:5000/api-front-tech-challenge:latest
          kubectl apply -f ./k8s/api-deployment.yaml

      - name: Deploy FrontEnd to Kubernetes
        run: |
          kubectl set image deployment/frontend-deployment frontend-container=localhost:5000/front-tech-challenge:latest
          kubectl apply -f ./k8s/frontend-deployment.yaml
